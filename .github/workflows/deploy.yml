name: Build, push, and deploy to GCP
on:
  push:
    branches:
      - master
    paths-ignore:
      - "doc/**"
      - "**/*.md"
      - ".github/dependabot.yml"
      - ".github/deploy_branch_to_dev.yml"
env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  IMAGE_BASE: ghcr.io/${{ github.repository }}

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout latest code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # ratchet:actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@3f07048e3d294f56e9b90ac5ea2c6f74e9ad0f98 # ratchet:actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Verify Gradle wrapper checksum
        uses: gradle/wrapper-validation-action@55e685c48d84285a5b0418cd094606e199cca3b6 # ratchet:gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        run: ./gradlew build
      - name: Install cosign
        uses: sigstore/cosign-installer@bd2d1189b064bcddc3903176a807dcdba72d7fd0 # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'
      - name: Verify distroless base image
        run: |
          cosign verify \
          --certificate-identity "keyless@distroless.iam.gserviceaccount.com" \
          --certificate-oidc-issuer "https://accounts.google.com" \
          gcr.io/distroless/java17
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # ratchet:docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # ratchet:docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # ratchet:docker/setup-buildx-action@v2
      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # ratchet:docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Sign the container image
        run: cosign sign --yes ${{ env.IMAGE_BASE }}@${{ steps.build-push.outputs.digest }}
      - name: Create SBOM
        run: ./gradlew cyclonedxBom
      - name: Attest image
        run: cosign attest --yes --predicate build/reports/bom.json --type cyclonedx ${{ env.IMAGE_BASE }}@${{ steps.build-push.outputs.digest }}

  deploy-dev-gcp:
    name: Deploy to dev-gcp
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # ratchet:actions/checkout@v3
      - uses: nais/deploy/actions/deploy@fff9ae049178e5d3dca5c9600cf78acce63c0708 # ratchet:nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yml,.nais/alerts.yml
          VARS: .nais/dev-gcp-vars.yml

  deploy-prod-gcp:
    name: Deploy to prod-gcp
    needs: deploy-dev-gcp
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # ratchet:actions/checkout@v3
      - uses: nais/deploy/actions/deploy@fff9ae049178e5d3dca5c9600cf78acce63c0708 # ratchet:nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yml,.nais/alerts.yml
          VARS: .nais/prod-gcp-vars.yml
