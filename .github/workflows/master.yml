name: Build, push and sign
on:
  push:
    branches:
      - master
    paths-ignore:
      - "*.md"

env:
  GH_REGISTRY: ghcr.io
  GOOG_REGISTRY: europe-north1-docker.pkg.dev/nais-io/nais/images

jobs:
  build_push_sign:
    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"
    outputs:
      img_to_deploy: "europe-north1-docker.pkg.dev/nais-io/nais/images/tokendings@${{ steps.build-push.outputs.digest }}"
      img_version: "${{ fromJSON(steps.metadata.outputs.json).labels['org.opencontainers.image.version'] }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["europe-north1-docker.pkg.dev/nais-io/nais/images/tokendings", "ghcr.io/${{ github.repository }}"]
    steps:
      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # ratchet:actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # ratchet:actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Verify Gradle wrapper checksum
        uses: gradle/wrapper-validation-action@55e685c48d84285a5b0418cd094606e199cca3b6 # ratchet:gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        run: ./gradlew build
      - name: Install cosign
        uses: sigstore/cosign-installer@204a51a57a74d190b284a0ce69b44bc37201f343 # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'
      - name: Verify distroless base image
        run: |
          cosign verify \
          --certificate-identity "keyless@distroless.iam.gserviceaccount.com" \
          --certificate-oidc-issuer "https://accounts.google.com" \
          gcr.io/distroless/java17
      - name: Authenticate to Google Cloud
        if: ${{ contains(matrix.image, 'docker.pkg.dev') }}
        id: googleauth
        uses: "google-github-actions/auth@e8df18b60c5dd38ba618c121b779307266153fbf" # ratchet:google-github-actions/auth@v1.0.0
        with:
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: "gh-tokendings@nais-io.iam.gserviceaccount.com"
          token_format: "access_token"
      - name: Login to Google Artifact Registry
        if: ${{ contains(matrix.image, 'docker.pkg.dev') }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # ratchet:docker/login-action@v2
        with:
          registry: ${{ env.GOOG_REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.googleauth.outputs.access_token }}"
      - name: Login to GitHub Container Registry
        if: ${{ contains(matrix.image, 'ghcr.io') }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # ratchet:docker/login-action@v2
        with:
          registry: ${{ env.GH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # ratchet:docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # ratchet:docker/setup-buildx-action@v2
      - name: Docker meta
        id: metadata
        uses: docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e # ratchet:docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=sha
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # ratchet:docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Sign the container image
        run: cosign sign --yes ${{ matrix.image }}@${{ steps.build-push.outputs.digest }}
      - name: Create SBOM
        run: ./gradlew cyclonedxBom
      - name: Attest image
        run: cosign attest --yes --predicate build/reports/bom.json --type cyclonedx ${{ matrix.image }}@${{ steps.build-push.outputs.digest }}

  deploy-dev-gcp:
    name: Deploy to dev-gcp
    needs: build_push_sign
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # ratchet:actions/checkout@v3
      - uses: nais/deploy/actions/deploy@e1d100f14637a6caa0aec40f5b5c7fd0c3ce500e # ratchet:nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yml,.nais/alerts.yml
          VARS: .nais/dev-gcp-vars.yml
          IMAGE: ${{ needs.build_push_sign.outputs.img_to_deploy }}

  deploy-prod-gcp:
    name: Deploy to prod-gcp
    needs: [build_push_sign, deploy-dev-gcp]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # ratchet:actions/checkout@v3
      - uses: nais/deploy/actions/deploy@e1d100f14637a6caa0aec40f5b5c7fd0c3ce500e # ratchet:nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yml,.nais/alerts.yml
          VARS: .nais/prod-gcp-vars.yml
          IMAGE: ${{ needs.build_push_sign.outputs.img_to_deploy }}
